@model EShiftSystem.Models.Job
@using EShiftSystem.Models.Enums
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Job Details";

    string GetPriorityClass(JobPriority priority) => priority switch
    {
        JobPriority.Urgent => "danger",
        JobPriority.High => "warning",
        JobPriority.Normal => "info",
        _ => "secondary"
    };

    string GetStatusClass(JobStatus status) => status switch
    {
        JobStatus.Pending => "warning",
        JobStatus.InProgress => "primary",
        JobStatus.Completed => "success",
        JobStatus.Cancelled => "danger",
        _ => "secondary"
    };
}

<div class="content-header">
    <h2>Job Details</h2>
    <div class="action-buttons">
        @if (Model.Status == JobStatus.Pending)
        {
            <a class="btn btn-outline-secondary me-2" asp-action="Edit" asp-route-id="@Model.JobId">
                <i class="fas fa-edit"></i> Edit
            </a>
            <button type="button" class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteConfirmModal">
                <i class="fas fa-trash-alt"></i> Delete
            </button>
        }
        <a asp-action="Index" class="btn btn-outline ms-2">
            <i class="fas fa-arrow-left"></i> Back to List
        </a>
    </div>
</div>

<div class="job-details-container">
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0">Basic Information</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <dl class="row">
                        <dt class="col-sm-4">Title</dt>
                        <dd class="col-sm-8">@Model.JobTitle</dd>

                        <dt class="col-sm-4">Date</dt>
                        <dd class="col-sm-8">@Model.JobDate.ToShortDateString()</dd>

                        <dt class="col-sm-4">Priority</dt>
                        <dd class="col-sm-8"><span class="badge bg-@GetPriorityClass(Model.Priority)">@Model.Priority</span></dd>
                    </dl>
                </div>
                <div class="col-md-6">
                    <dl class="row">
                        <dt class="col-sm-4">Status</dt>
                        <dd class="col-sm-8">
                            <span class="badge bg-@GetStatusClass(Model.Status)">@Model.Status</span>
                        </dd>

                        <dt class="col-sm-4">Created At</dt>
                        <dd class="col-sm-8">@Model.CreatedAt.ToString("MMM dd, yyyy HH:mm")</dd>

                        @if (Model.UpdatedAt.HasValue)
                        {
                            <dt class="col-sm-4">Last Updated</dt>
                            <dd class="col-sm-8">@Model.UpdatedAt.Value.ToString("MMM dd, yyyy HH:mm")</dd>
                        }
                    </dl>
                </div>
            </div>
            @if (!string.IsNullOrEmpty(Model.Description))
            {
                <div class="row mt-3">
                    <div class="col-12">
                        <dt>Description</dt>
                        <dd class="text-muted">@Model.Description</dd>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Loads</h5>
            <span class="badge bg-secondary">@(Model.Loads?.Count ?? 0) Loads</span>
        </div>
        <div class="card-body">
            @if (Model.Loads != null && Model.Loads.Any())
            {
                <div class="accordion" id="loadsAccordion">
                    @foreach (var load in Model.Loads)
                    {
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#load-@load.LoadId">
                                    <div class="d-flex w-100 justify-content-between align-items-center">
                                        <span>
                                            <i class="fas fa-truck me-2"></i>
                                            @load.StartLocation <i class="fas fa-arrow-right mx-2"></i> @load.Destination
                                        </span>
                                        <span class="badge bg-@GetStatusClass(load.Status) ms-2">@load.Status</span>
                                    </div>
                                </button>
                            </h2>
                            <div id="load-@load.LoadId" class="accordion-collapse collapse">
                                <div class="accordion-body">
                                    <h6 class="mb-3">Items in this Load</h6>
                                    @if (load.LoadItems != null && load.LoadItems.Any())
                                    {
                                        <div class="table-responsive">
                                            <table class="table table-sm">
                                                <thead>
                                                    <tr>
                                                        <th>Item Type</th>
                                                        <th>Quantity</th>
                                                        <th>Note</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var item in load.LoadItems)
                                                    {
                                                        <tr>
                                                            <td>@item.ItemType</td>
                                                            <td>@item.Quantity</td>
                                                            <td>@(string.IsNullOrEmpty(item.Note) ? "-" : item.Note)</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    }
                                    else
                                    {
                                        <p class="text-muted mb-0">No items added to this load.</p>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <p class="text-muted mb-0">No loads have been added to this job.</p>
            }
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this job?</p>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    This action cannot be undone.
                </div>
                <dl class="row mb-0">
                    <dt class="col-sm-4">Job Title</dt>
                    <dd class="col-sm-8">@Model.JobTitle</dd>
                    <dt class="col-sm-4">Date</dt>
                    <dd class="col-sm-8">@Model.JobDate.ToShortDateString()</dd>
                    <dt class="col-sm-4">Status</dt>
                    <dd class="col-sm-8">
                        <span class="badge bg-@GetStatusClass(Model.Status)">@Model.Status</span>
                    </dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline" data-bs-dismiss="modal">Cancel</button>
                <form asp-action="Delete" asp-route-id="@Model.JobId" method="post" class="d-inline">
                    <button type="submit" class="btn btn-danger">Delete Job</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .job-details-container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .accordion-button:not(.collapsed) {
            background-color: var(--light);
            color: var(--dark);
        }

        .accordion-button:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 0.25rem rgba(var(--primary-rgb), 0.25);
        }

        .modal-body dl {
            font-size: 0.95rem;
        }
    </style>
} 