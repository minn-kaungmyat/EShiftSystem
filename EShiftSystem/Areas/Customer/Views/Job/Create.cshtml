@model EShiftSystem.ViewModels.JobCreateViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    ViewData["Title"] = "Create New Job";
}

<div class="content-header"><h2>Create Transport Job</h2></div>
<div class="step-indicator">
    <div class="step" data-step="1">
        <div class="step-number">1</div>
        <div class="step-label">Job Details</div>
    </div>
    <div class="step" data-step="2">
        <div class="step-number">2</div>
        <div class="step-label">Add Loads</div>
    </div>
    <div class="step" data-step="3">
        <div class="step-number">3</div>
        <div class="step-label">Review & Submit</div>
    </div>
</div>

<form asp-action="Create" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div id="step-1" class="step-content active">
        <!-- Location Section -->
        <div class="job-details-section mb-4">
            <div class="section-header mb-3">
                <h6 class="section-title transport-route">Transport Route</h6>
            </div>
            <div class="location-content">
                <div class="row">
                    <div class="col-md-6">
                        <div class="location-input-group mb-3">
                            <div class="location-input-header">
                                <i class="fas fa-map-marker-alt location-icon start-icon"></i>
                                <label asp-for="StartLocation" class="location-label">Pickup Location</label>
                            </div>
                            <div class="location-input-wrapper">
                                <input asp-for="StartLocation" class="form-control location-input" placeholder="Enter pickup address..." />
                                <i class="fas fa-search location-search-icon"></i>
                            </div>
                            <span asp-validation-for="StartLocation" class="text-danger"></span>
                        </div>
                        <div class="location-input-group mb-3">
                            <div class="location-input-header">
                                <i class="fas fa-flag-checkered location-icon end-icon"></i>
                                <label asp-for="Destination" class="location-label">Delivery Location</label>
                            </div>
                            <div class="location-input-wrapper">
                                <input asp-for="Destination" class="form-control location-input" placeholder="Enter delivery address..." />
                                <i class="fas fa-search location-search-icon"></i>
                            </div>
                            <span asp-validation-for="Destination" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <!-- Map Preview -->
                        <div class="map-preview-container">
                            <div id="map" class="minimalist-map"></div>
                            <div class="map-status">
                                <small class="text-muted">Select addresses to view route</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Job Details Section -->
        <div class="job-details-section">
            <div class="section-header mb-3">
                <h6 class="section-title">Job Information</h6>
            </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label asp-for="JobTitle" class="control-label"></label>
                    <input asp-for="JobTitle" class="form-control" />
                    <span asp-validation-for="JobTitle" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="JobDate" class="control-label"></label>
                    <input asp-for="JobDate" type="date" class="form-control" />
                    <span asp-validation-for="JobDate" class="text-danger"></span>
                </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label asp-for="Priority" class="control-label"></label>
                        <select asp-for="Priority" asp-items="Html.GetEnumSelectList<EShiftSystem.Models.Enums.JobPriority>()" class="form-control"></select>
                        <span asp-validation-for="Priority" class="text-danger"></span>
                    </div>
                <div class="form-group mb-3">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>
        </div>
        </div>

        <!-- Hidden coordinate fields for Google Maps -->
        <input type="hidden" asp-for="StartLatitude" />
        <input type="hidden" asp-for="StartLongitude" />
        <input type="hidden" asp-for="DestinationLatitude" />
        <input type="hidden" asp-for="DestinationLongitude" />
    </div>

    <div id="step-2" class="step-content">
        <div id="loads-container">
            @for (var i = 0; i < Model.Loads.Count; i++)
            {
                <div class="card mb-3 load-entry">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="load-title mb-0">Load #@(i + 1)</h5>
                        @if (Model.Loads.Count > 1)
                        {
                            <button type="button" class="btn btn-sm btn-outline-danger remove-load-btn" style="font-size: 16px;">x</button>
                        }
                    </div>
                    <div class="card-body">
                        <div class="custom-divider">
                            <span class="divider-text">Items in this Load</span>
                        </div>
                        <div class="load-items-container" data-load-index="@i">
                            @for (var j = 0; j < Model.Loads[i].LoadItems.Count; j++)
                            {
                                <div class="load-item-entry border-bottom pb-3 mb-3">
                                    <div class="row">
                                        <div class="col-md-2 form-group mb-3">
                                            <label asp-for="Loads[i].LoadItems[j].ItemType"></label>
                                            <select asp-for="Loads[i].LoadItems[j].ItemType" class="form-control">
                                                <option value="">Select Item Type</option>
                                                <option value="Box">Box</option>
                                                <option value="Furniture">Furniture</option>
                                                <option value="Electronics">Electronics</option>
                                                <option value="Other">Other</option>
                                            </select>
                                            <span asp-validation-for="Loads[i].LoadItems[j].ItemType" class="text-danger"></span>
                                        </div>
                                        <div class="col-md-2 form-group mb-3">
                                            <label asp-for="Loads[i].LoadItems[j].Description"></label>
                                            <input asp-for="Loads[i].LoadItems[j].Description" class="form-control" placeholder="Item description (optional)" />
                                            <span asp-validation-for="Loads[i].LoadItems[j].Description" class="text-danger"></span>
                                        </div>
                                        <div class="col-md-1 form-group mb-3">
                                            <label asp-for="Loads[i].LoadItems[j].Quantity"></label>
                                            <input asp-for="Loads[i].LoadItems[j].Quantity" class="form-control" type="number" value="1" min="1" />
                                            <span asp-validation-for="Loads[i].LoadItems[j].Quantity" class="text-danger"></span>
                                        </div>
                                        <div class="col-md-2 form-group mb-3">
                                            <label asp-for="Loads[i].LoadItems[j].WeightKg"></label>
                                                                                            <input asp-for="Loads[i].LoadItems[j].WeightKg" class="form-control" type="number" step="any" min="0.1" placeholder="Optional" />
                                            <small class="form-text text-muted">Estimated weight</small>
                                            <span asp-validation-for="Loads[i].LoadItems[j].WeightKg" class="text-danger"></span>
                                        </div>
                                        <div class="col-md-4 form-group mb-3">
                                            <label asp-for="Loads[i].LoadItems[j].SpecialInstructions"></label>
                                            <select asp-for="Loads[i].LoadItems[j].SpecialInstructions" class="form-control">
                                                <option value="">No special instructions</option>
                                                <option value="Fragile">Fragile</option>
                                                <option value="Keep Upright">Keep Upright</option>
                                                <option value="Heavy Item">Heavy Item</option>
                                                <option value="Handle with Care">Handle with Care</option>
                                                <option value="Temperature Sensitive">Temperature Sensitive</option>
                                                <option value="Other">Other</option>
                                            </select>
                                            <span asp-validation-for="Loads[i].LoadItems[j].SpecialInstructions" class="text-danger"></span>
                                        </div>
                                                                                    <div class="col-auto">
                                                <label>&nbsp;</label>
                                                @if (Model.Loads[i].LoadItems.Count > 1)
                                                {
                                                    <button type="button" class="btn btn-sm btn-outline-danger remove-load-item-btn" style="font-size: 16px;">x</button>
                                                }
                                            </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <button type="button" class="btn add-load-item-btn btn-link text-decoration-none p-0" style="color: var(--primary)">
                            <i class="fas fa-plus"></i> Add Item
                        </button>
                    </div>
                </div>
            }
        </div>
        <div class="mt-3 mb-4">
            <button id="add-load-btn" type="button" class="btn btn-link text-decoration-none p-0" style="color: var(--primary)">
                <i class="fas fa-plus"></i> Add Load
            </button>
        </div>
    </div>

    <div id="step-3" class="step-content">
        <h4>Job Summary</h4>
        <div id="review-content">
            <p>Review functionality will be added here to display all entered data before final submission.</p>
        </div>
    </div>

    <div class="navigation-buttons">
        <button type="button" id="prevBtn" class="btn btn-outline">Back</button>
        <button type="button" id="cancelBtn" class="btn btn-outline" onclick="window.location.href='@Url.Action("Index")'">Cancel</button>
        <button type="button" id="nextBtn" class="btn btn-primary">Next</button>
                        <button type="submit" id="submitBtn" class="btn btn-primary">Book Job</button>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            var currentStep = 1;
            var totalSteps = 3;

            const stepTitles = {
                1: "Add Loads",
                            2: "Review & Book",
            3: "Book"
            };

            function showStep(stepNumber) {
                $('.step-content').removeClass('active').hide();
                $(`#step-${stepNumber}`).addClass('active').show();

                $('.step-indicator .step').removeClass('active completed');
                for (let i = 1; i <= totalSteps; i++) {
                    let stepElement = $(`.step-indicator .step[data-step="${i}"]`);
                    if (i < stepNumber) {
                        stepElement.addClass('completed');
                    } else if (i === stepNumber) {
                        stepElement.addClass('active');
                    }
                }

                // Show/hide navigation buttons based on step
                if (stepNumber === 1) {
                    $('#prevBtn').hide();
                    $('#cancelBtn').show();
                } else {
                    $('#prevBtn').show();
                    $('#cancelBtn').hide();
                }
                $('#nextBtn').toggle(stepNumber < totalSteps);
                $('#submitBtn').toggle(stepNumber === totalSteps);

                if (stepNumber < totalSteps) {
                    $('#nextBtn').text('Next: ' + stepTitles[stepNumber]);
                }
                reparseFormValidation();
            }

            function isValidStep(stepNumber) {
                let isValid = true;
                $(`#step-${stepNumber} input, #step-${stepNumber} select, #step-${stepNumber} textarea`).each(function () {
                    $(this).valid();
                    if (!$(this).valid()) {
                        isValid = false;
                    }
                });
                return isValid;
            }

            function reparseFormValidation() {
                var form = $('form');
                form.removeData('validator');
                form.removeData('unobtrusiveValidation');
                $.validator.unobtrusive.parse(form);
            }

            function populateReviewStep() {
                let reviewHtml = '<h5>Job Details</h5>';
                reviewHtml += `<p><strong>Job Title:</strong> ${$('#JobTitle').val()}</p>`;
                reviewHtml += `<p><strong>Job Date:</strong> ${$('#JobDate').val()}</p>`;
                reviewHtml += `<p><strong>Start Location:</strong> ${$('#StartLocation').val()}</p>`;
                reviewHtml += `<p><strong>Destination:</strong> ${$('#Destination').val()}</p>`;
                reviewHtml += `<p><strong>Description:</strong> ${$('#Description').val()}</p>`;
                reviewHtml += `<p><strong>Priority:</strong> ${$('#Priority option:selected').text()}</p>`;

                reviewHtml += '<hr><h5>Loads & Items</h5>';
                if ($('#loads-container .load-entry').length === 0) {
                    reviewHtml += '<p>No loads added.</p>';
                } else {
                    $('#loads-container .load-entry').each(function (loadIndex, loadElement) {
                        reviewHtml += `<div class="card mb-3"><div class="card-body">`;
                        reviewHtml += `<h6>Load #${loadIndex + 1}</h6>`;
                        // Job-level locations are shown in job summary, not per load

                        reviewHtml += `<h6>Items:</h6>`;
                        let itemCount = 0;
                        $(loadElement).find('.load-item-entry').each(function (itemIndex, itemElement) {
                            const itemType = $(itemElement).find(`[name="Loads[${loadIndex}].LoadItems[${itemIndex}].ItemType"]`).val();
                            const itemDescription = $(itemElement).find(`[name="Loads[${loadIndex}].LoadItems[${itemIndex}].Description"]`).val();
                            const itemQuantity = $(itemElement).find(`[name="Loads[${loadIndex}].LoadItems[${itemIndex}].Quantity"]`).val();
                            const itemWeight = $(itemElement).find(`[name="Loads[${loadIndex}].LoadItems[${itemIndex}].WeightKg"]`).val();
                            const itemSpecialInstructions = $(itemElement).find(`[name="Loads[${loadIndex}].LoadItems[${itemIndex}].SpecialInstructions"]`).val();

                            if (itemType || itemQuantity || itemDescription || itemWeight || itemSpecialInstructions) {
                                let itemDetails = `<strong>${itemType || 'Not specified'}</strong>`;
                                if (itemDescription) itemDetails += ` - ${itemDescription}`;
                                itemDetails += ` (Qty: ${itemQuantity || 1}`;
                                if (itemWeight) itemDetails += `, Weight: ${itemWeight}kg`;
                                if (itemSpecialInstructions) itemDetails += `, Special: ${itemSpecialInstructions}`;
                                itemDetails += ')';
                                reviewHtml += `<p class="mb-0 ms-3">- ${itemDetails}</p>`;
                                itemCount++;
                            }
                        });
                        if (itemCount === 0) {
                            reviewHtml += `<p class="mb-0 ms-3">No items specified for this load.</p>`;
                        }
                        reviewHtml += `</div></div>`;
                    });
                }
                $('#review-content').html(reviewHtml);
            }

            $('#nextBtn').click(function () {
                if (isValidStep(currentStep)) {
                    currentStep++;
                    if (currentStep > totalSteps) {
                        currentStep = totalSteps;
                    }
                    if (currentStep === totalSteps) {
                        populateReviewStep();
                    }
                    showStep(currentStep);
                }
            });

            $('#prevBtn').click(function () {
                currentStep--;
                if (currentStep < 1) {
                    currentStep = 1;
                }
                showStep(currentStep);
            });

            $('.step-indicator .step').click(function() {
                let clickedStep = parseInt($(this).data('step'));
                if (clickedStep < currentStep) {
                    currentStep = clickedStep;
                    showStep(currentStep);
                } else if (clickedStep === currentStep) {
                } else if (clickedStep > currentStep && isValidStep(currentStep)) {
                    currentStep = clickedStep;
                    if (currentStep === totalSteps) {
                        populateReviewStep();
                    }
                    showStep(currentStep);
                }
            });

            function reindexAll() {
                // First remove validation data
                $('.load-entry input, .load-entry select').each(function() {
                    $(this).removeData("validator").removeData("unobtrusiveValidation");
                });

                $('.load-entry').each(function (loadIndex, loadElement) {
                    $(loadElement).find('.load-title').text('Load #' + (loadIndex + 1));
                    $(loadElement).find('.load-items-container').attr('data-load-index', loadIndex);

                    $(loadElement).find('input, select, textarea, span[data-valmsg-for]').each(function () {
                        var originalName = $(this).attr('name') || $(this).attr('data-valmsg-for');
                        if (originalName) {
                            var newName = originalName.replace(/Loads\[\d+\]/, 'Loads[' + loadIndex + ']');
                            if ($(this).is('input') || $(this).is('select') || $(this).is('textarea')) {
                                $(this).attr('name', newName);
                                var originalId = $(this).attr('id');
                                if (originalId) {
                                    var newId = newIdFromOldName(originalId, newName);
                                    $(this).attr('id', newId);
                                }
                            } else if ($(this).is('span')) {
                                $(this).attr('data-valmsg-for', newName);
                            }
                        }
                    });

                    $(loadElement).find('.load-item-entry').each(function (itemIndex, itemElement) {
                        $(itemElement).find('input, select, span[data-valmsg-for]').each(function () {
                            var originalName = $(this).attr('name') || $(this).attr('data-valmsg-for');
                            if (originalName) {
                                var newName = originalName
                                    .replace(/Loads\[\d+\]/, 'Loads[' + loadIndex + ']')
                                    .replace(/LoadItems\[\d+\]/, 'LoadItems[' + itemIndex + ']');

                                if ($(this).is('input') || $(this).is('select')) {
                                    $(this).attr('name', newName);
                                    var originalId = $(this).attr('id');
                                    if (originalId) {
                                        var newId = newIdFromOldName(originalId, newName);
                                        $(this).attr('id', newId);
                                    }
                                } else if ($(this).is('span')) {
                                    $(this).attr('data-valmsg-for', newName);
                                }
                            }
                        });
                    });
                });

                // Reparse validation on the entire form
                var form = $('form');
                form.removeData("validator");
                form.removeData("unobtrusiveValidation");
                $.validator.unobtrusive.parse(form);
            }

            function newIdFromOldName(oldId, newName) {
                return newName.replace(/\[/g, '_').replace(/\]/g, '__').replace(/\./g, '_');
            }

            function updateRemoveButtons() {
                // Update load remove buttons
                $('.load-entry').each(function() {
                    const removeBtn = $(this).find('.remove-load-btn');
                    if ($('.load-entry').length > 1) {
                        if (removeBtn.length === 0) {
                            $(this).find('.card-header').append('<button type="button" class="btn btn-sm btn-outline-danger remove-load-btn" style="font-size: 16px;">x</button>');
                        }
                    } else {
                        removeBtn.remove();
                    }
                });

                // Update item remove buttons
                $('.load-items-container').each(function() {
                    const items = $(this).find('.load-item-entry');
                    items.each(function() {
                        const buttonContainer = $(this).find('.col-auto');
                        const existingBtn = buttonContainer.find('.remove-load-item-btn');
                        
                        if (items.length > 1) {
                            if (existingBtn.length === 0) {
                                buttonContainer.append('<button type="button" class="btn btn-sm btn-outline-danger remove-load-item-btn" style="font-size: 16px;">x</button>');
                            }
                        } else {
                            existingBtn.remove();
                        }
                    });
                });
            }

            $(document).on('click', '.add-load-item-btn', function () {
                var loadItemsContainer = $(this).prev('.load-items-container');
                var loadIndex = loadItemsContainer.data('load-index');
                var itemIndex = loadItemsContainer.find('.load-item-entry').length;

                var newLoadItemHtml = `
                <div class="load-item-entry border-bottom pb-3 mb-3">
                    <div class="row">
                        <div class="col-md-2 form-group mb-3">
                            <label>Item Type</label>
                            <select class="form-control" name="Loads[${loadIndex}].LoadItems[${itemIndex}].ItemType" data-val="true" data-val-required="The Item Type field is required">
                                <option value="">Select Item Type</option>
                                <option value="Box">Box</option>
                                <option value="Furniture">Furniture</option>
                                <option value="Electronics">Electronics</option>
                                <option value="Other">Other</option>
                            </select>
                            <span class="text-danger field-validation-valid" data-valmsg-for="Loads[${loadIndex}].LoadItems[${itemIndex}].ItemType" data-valmsg-replace="true"></span>
                        </div>
                        <div class="col-md-2 form-group mb-3">
                            <label>Description</label>
                            <input class="form-control" type="text" name="Loads[${loadIndex}].LoadItems[${itemIndex}].Description" placeholder="Item description (optional)" />
                            <span class="text-danger field-validation-valid" data-valmsg-for="Loads[${loadIndex}].LoadItems[${itemIndex}].Description" data-valmsg-replace="true"></span>
                        </div>
                        <div class="col-md-1 form-group mb-3">
                            <label>Quantity</label>
                            <input class="form-control" type="number" name="Loads[${loadIndex}].LoadItems[${itemIndex}].Quantity" data-val="true" data-val-required="The Quantity field is required" data-val-number="The field Quantity must be a number" value="1" min="1" />
                            <span class="text-danger field-validation-valid" data-valmsg-for="Loads[${loadIndex}].LoadItems[${itemIndex}].Quantity" data-valmsg-replace="true"></span>
                        </div>
                        <div class="col-md-2 form-group mb-3">
                            <label>Weight (kg)</label>
                                                            <input class="form-control" type="number" name="Loads[${loadIndex}].LoadItems[${itemIndex}].WeightKg" step="any" min="0.1" placeholder="Optional" />
                            <small class="form-text text-muted">Estimated weight</small>
                            <span class="text-danger field-validation-valid" data-valmsg-for="Loads[${loadIndex}].LoadItems[${itemIndex}].WeightKg" data-valmsg-replace="true"></span>
                        </div>
                        <div class="col-md-4 form-group mb-3">
                            <label>Special Instructions</label>
                            <select class="form-control" name="Loads[${loadIndex}].LoadItems[${itemIndex}].SpecialInstructions">
                                <option value="">No special instructions</option>
                                <option value="Fragile">Fragile</option>
                                <option value="Keep Upright">Keep Upright</option>
                                <option value="Heavy Item">Heavy Item</option>
                                <option value="Handle with Care">Handle with Care</option>
                                <option value="Temperature Sensitive">Temperature Sensitive</option>
                                <option value="Other">Other</option>
                            </select>
                            <span class="text-danger field-validation-valid" data-valmsg-for="Loads[${loadIndex}].LoadItems[${itemIndex}].SpecialInstructions" data-valmsg-replace="true"></span>
                        </div>
                        <div class="col-auto">
                            <label>&nbsp;</label>
                            <button type="button" class="btn btn-sm btn-outline-danger remove-load-item-btn" style="font-size: 16px;">x</button>
                        </div>
                    </div>
                </div>`;

                loadItemsContainer.append(newLoadItemHtml);
                reindexAll();
                updateRemoveButtons();
            });

            $(document).on('click', '.remove-load-item-btn', function () {
                const loadItemsContainer = $(this).closest('.load-items-container');
                if (loadItemsContainer.find('.load-item-entry').length > 1) {
                    $(this).closest('.load-item-entry').remove();
                    reindexAll();
                    updateRemoveButtons();
                }
            });

            $("#add-load-btn").click(function () {
                var loadsContainer = $('#loads-container');
                var loadIndex = loadsContainer.find('.load-entry').length;

                var newLoadHtml = `
                <div class="card mb-3 load-entry">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="load-title mb-0">Load #${loadIndex + 1}</h5>
                        <button type="button" class="btn btn-sm btn-outline-danger remove-load-btn" style="font-size: 16px;">x</button>
                    </div>
                    <div class="card-body">
                        <div class="custom-divider">
                            <span class="divider-text">Items in this Load</span>
                        </div>
                        <div class="load-items-container" data-load-index="${loadIndex}">
                            <div class="load-item-entry border-bottom pb-3 mb-3">
                                <div class="row">
                                    <div class="col-md-2 form-group mb-3">
                                        <label>Item Type</label>
                                        <select class="form-control" name="Loads[${loadIndex}].LoadItems[0].ItemType" data-val="true" data-val-required="The Item Type field is required">
                                            <option value="">Select Item Type</option>
                                            <option value="Box">Box</option>
                                            <option value="Furniture">Furniture</option>
                                            <option value="Electronics">Electronics</option>
                                            <option value="Other">Other</option>
                                        </select>
                                        <span class="text-danger field-validation-valid" data-valmsg-for="Loads[${loadIndex}].LoadItems[0].ItemType" data-valmsg-replace="true"></span>
                                    </div>
                                    <div class="col-md-2 form-group mb-3">
                                        <label>Description</label>
                                        <input class="form-control" type="text" name="Loads[${loadIndex}].LoadItems[0].Description" placeholder="Item description (optional)" />
                                        <span class="text-danger field-validation-valid" data-valmsg-for="Loads[${loadIndex}].LoadItems[0].Description" data-valmsg-replace="true"></span>
                                    </div>
                                    <div class="col-md-1 form-group mb-3">
                                        <label>Quantity</label>
                                        <input class="form-control" type="number" name="Loads[${loadIndex}].LoadItems[0].Quantity" data-val="true" data-val-required="The Quantity field is required" data-val-number="The field Quantity must be a number" value="1" min="1" />
                                        <span class="text-danger field-validation-valid" data-valmsg-for="Loads[${loadIndex}].LoadItems[0].Quantity" data-valmsg-replace="true"></span>
                                    </div>
                                    <div class="col-md-2 form-group mb-3">
                                        <label>Weight (kg)</label>
                                                                                    <input class="form-control" type="number" name="Loads[${loadIndex}].LoadItems[0].WeightKg" step="any" min="0.1" placeholder="Optional" />
                                        <small class="form-text text-muted">Estimated weight</small>
                                        <span class="text-danger field-validation-valid" data-valmsg-for="Loads[${loadIndex}].LoadItems[0].WeightKg" data-valmsg-replace="true"></span>
                                    </div>
                                    <div class="col-md-4 form-group mb-3">
                                        <label>Special Instructions</label>
                                        <select class="form-control" name="Loads[${loadIndex}].LoadItems[0].SpecialInstructions">
                                            <option value="">No special instructions</option>
                                            <option value="Fragile">Fragile</option>
                                            <option value="Keep Upright">Keep Upright</option>
                                            <option value="Heavy Item">Heavy Item</option>
                                            <option value="Handle with Care">Handle with Care</option>
                                            <option value="Temperature Sensitive">Temperature Sensitive</option>
                                            <option value="Other">Other</option>
                                        </select>
                                        <span class="text-danger field-validation-valid" data-valmsg-for="Loads[${loadIndex}].LoadItems[0].SpecialInstructions" data-valmsg-replace="true"></span>
                                    </div>
                                    <div class="col-auto">
                                        <label>&nbsp;</label>
                                        <button type="button" class="btn btn-sm btn-outline-danger remove-load-item-btn" style="font-size: 16px;">x</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn add-load-item-btn btn-link text-decoration-none p-0" style="color: var(--primary)">
                            <i class="fas fa-plus"></i> Add Item
                        </button>
                    </div>
                </div>`;

                loadsContainer.append(newLoadHtml);
                reindexAll();
                updateRemoveButtons();
            });

            $(document).on('click', '.remove-load-btn', function () {
                if ($('.load-entry').length > 1) {
                    $(this).closest('.load-entry').remove();
                    reindexAll();
                    updateRemoveButtons();
                }
            });

            showStep(currentStep);
            reindexAll();
            updateRemoveButtons();
        });
    </script>
}